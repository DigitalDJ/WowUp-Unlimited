--- .github/workflows/electron-all-build.yml
+++ .github/workflows/electron-all-build.yml
@@ -63,12 +63,19 @@
 
       - name: Use Node.js ${{ matrix.node-version }}
         uses: actions/setup-node@v2
         with:
           node-version: ${{ matrix.node-version }}
 
+      - name: Inject Token
+        env:
+          CURSEFORGE_API_KEY: ${{ secrets.CURSEFORGE_API_KEY }}
+        run: |
+          cd ./WowUp/wowup-electron
+          node ./inject-token.js
+
       - name: Install Angular CLI
         run: npm install -g @angular/cli
 
       - name: dmg-license
         if: matrix.os == 'macos-11'
         run: |
@@ -79,13 +86,13 @@
         if: matrix.os == 'ubuntu-latest'
         env:
           GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
         run: |
           cd ./wowup-electron
           npm i
-          npm run electron:publish
+          npm run electron:publish:vanilla
 
       - name: Build Mac App
         if: matrix.os == 'macos-11'
         env:
           GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
           CSC_LINK: ${{ secrets.MACOS_CERT }}
@@ -93,15 +100,15 @@
           NOTARIZE_APPLE_ID: ${{ secrets.NOTARIZE_APPLE_ID }}
           NOTARIZE_APPLE_PASSWORD: ${{ secrets.NOTARIZE_APPLE_PASSWORD }}
           NOTARIZE_APPLE_TEAM_ID: ${{ secrets.NOTARIZE_APPLE_TEAM_ID }}
         run: |
           cd ./wowup-electron
           npm i
-          npm run electron:publish
+          npm run electron:publish:vanilla
 
       - name: Build Windows App
         if: matrix.os == 'windows-latest'
         env:
           GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
           CSC_LINK: ${{ secrets.WINDOWS_CSC_LINK }}
           CSC_KEY_PASSWORD: ${{ secrets.WINDOWS_CSC_KEY_PASSWORD }}
         run: cd ./wowup-electron && npm i && npm run electron:publish
